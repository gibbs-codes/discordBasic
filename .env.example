# Discord Bot Configuration
DISCORD_TOKEN=your_discord_bot_token_here

# MongoDB Connection for Technical Workspace
# For local development (default):
MONGO_URI=mongodb://localhost:27017/technical_workspace
# For Docker containers:
# MONGO_URI=mongodb://host.docker.internal:27017/technical_workspace

# Environment Detection (optional)
# Set to 'true' when running inside Docker containers
DOCKER_ENV=false

# MongoDB Host Override (optional)
# For Docker Compose: use 'mongodb' (service name)
# For standalone Docker: use 'host.docker.internal'
# For local development: leave unset (will use localhost)
# MONGO_HOST=mongodb

# Default LLM Configuration
LLM_PROVIDER=openai
LLM_MODEL=gpt-4

# OpenAI Configuration
OPENAI_API_KEY=your_openai_api_key_here

# Ollama Configuration (if using local models)
OLLAMA_URL=http://localhost:11434

# Channel-Specific Model Overrides (Optional)
# These override the default LLM_MODEL for specific channels
CODING_MODEL=gpt-4
GENERAL_MODEL=gpt-3.5-turbo
PROJECTS_MODEL=gpt-4
PLANNING_MODEL=gpt-4
ANALYSIS_MODEL=gpt-4
ADMIN_MODEL=gpt-3.5-turbo

# Channel-specific models
CODING_MODEL=deepseek-r1:7b       
GENERAL_MODEL=phi4-mini
PROJECTS_MODEL=deepseek-r1:7b
PLANNING_MODEL=phi4-min
ANALYSIS_MODEL=deepseek-r1:7b
ADMIN_MODEL=phi4-mini

# Logging Configuration
LOG_LEVEL=info
NODE_ENV=development

# Performance and Memory Settings
MAX_MEMORY_LOOKBACK_DAYS=14
CACHE_TTL_MINUTES=30
MAX_MESSAGE_HISTORY=5

# Admin Configuration
ADMIN_ROLE_NAME=Administrator
ADMIN_USER_IDS=123456789012345678,987654321098765432

# Database Performance
MONGODB_MAX_POOL_SIZE=10
MONGODB_TIMEOUT_MS=5000

# Feature Flags
ENABLE_MEMORY_CONTEXT=true
ENABLE_THREAD_CREATION=true
ENABLE_REACTION_TRACKING=true
ENABLE_ADMIN_COMMANDS=true

# Rate Limiting (per user per minute)
RATE_LIMIT_MESSAGES=10
RATE_LIMIT_ADMIN_COMMANDS=5

# Testing Configuration
TEST_GUILD_ID=your_test_guild_id_here
TEST_USER_ID=your_test_user_id_here

# Example Multi-Provider Setup Notes:
# The bot now supports dynamic channel configuration through MongoDB.
# You can configure different providers per channel using admin commands:
#
# Slash Commands:
# /setmodel channel:coding model:gpt-4-turbo
# /setmodel channel:general model:gpt-3.5-turbo
# /setprompt channel:analysis prompt:"Custom analysis prompt"
# /settemp channel:coding temperature:0.2
#
# Legacy Commands:
# !update-config coding model gpt-4-turbo
# !update-config analysis provider ollama
# !update-config general temperature 0.8
#
# Channel configurations are stored in MongoDB and override these defaults.
# Default configurations are created automatically on first startup.


# Security Notes:
# - Never commit your actual API keys or tokens
# - Use environment-specific .env files (.env.development, .env.production)
# - Restrict admin access using ADMIN_USER_IDS or Discord role permissions
# - Monitor API usage and set appropriate rate limits